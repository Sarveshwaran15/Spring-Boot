üîπ Spring Boot JDBC Layered Architecture

1Ô∏è‚É£ Model Layer (Entity)
Represents the data structure of your table.
Typically a POJO (Plain Old Java Object).
Does not require annotations like @Entity (since we are using JDBC, not JPA).

2Ô∏è‚É£ Repository (DAO) Layer
Handles direct communication with the database.
Uses JdbcTemplate to perform queries.

3Ô∏è‚É£ Service Layer
Contains business logic.
Calls the repository layer for database operations.

4Ô∏è‚É£ Controller Layer
Handles HTTP requests.
Calls the service layer to process data.

üéØ How This Model Works in a Spring Boot JDBC Application?
1Ô∏è‚É£ Controller Layer receives a request (e.g., fetch an employee).
2Ô∏è‚É£ Service Layer processes business logic.
3Ô∏è‚É£ Repository Layer interacts with the database using JdbcTemplate.
4Ô∏è‚É£ Model Layer (Employee) holds the retrieved data and returns it as a response.
